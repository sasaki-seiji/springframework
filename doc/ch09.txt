【9.2:Spring Securityのセットアップ】

【9.2.1:ライブラリのセットアップ】
【9.2.2:Spring SecurityのBean定義】
【9.2.3:サーブレットフィルタの設定】

・(2018.10.08)Spring Securityのセットアップ(JavaConfig)

	<groupId>example</groupId>
	<artifactId>spring-security-config</artifactId>

　ベース： 4.2:firstapp

　（依存ライブラリ）
　
	<dependencies>
		<!-- if miss, The superclass "javax.servlet.http.HttpServlet" was not found 
			on the Java Build Path -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %> -->
		<dependency>
			<groupId>org.apache.taglibs</groupId>
			<artifactId>taglibs-standard-jstlel</artifactId>
		</dependency>

		<!-- org.springframework.stereotype.Controller, etc. -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>

		<!-- org.hibernate.validator.constraints.NotEmpty -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>

		<!-- 2018.09.11: not needed? -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>

		<!-- SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder". -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<!--  spring security related dependencies -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
		</dependency>

	</dependencies>

（コメント）

　・認証処理の実装がないので、ログインダイアログを入力後、以下のエラーメッセージが
	ログインダイアログに出力される

	Your login attempt was not successful, try again.
	Reason: No AuthenticationProvider found for org.springframework.security.authentication.UsernamePasswordAuthenticationToken

　・コンテキストローダリスナの構成ファイルを複数指定できる(以下参照）
　	
  <listener>
  	<listener-class>
  		org.springframework.web.context.ContextLoaderListener
  	</listener-class>
  </listener>
  <context-param>
  	<param-name>contextClass</param-name>
  	<param-value>
  		org.springframework.web.context.support.AnnotationConfigWebApplicationContext
  	</param-value>
  </context-param>
  <context-param>
	<param-name>contextConfigLocation</param-name>
	<param-value>
		example.config.AppConfig
		example.config.WebSecurityConfig
	</param-value>
  </context-param>
	

・(2018.10.08)Spring Securityのセットアップ(XML Config)

  <groupId>example</groupId>
  <artifactId>spring-security-config-xml</artifactId>

　ベース： 4.2:firstapp-xml

（コメント）

　・コンテキストローダリスナの構成ファイルを複数指定できる(以下参照）
　	
　
  <listener>
  	<listener-class>
  		org.springframework.web.context.ContextLoaderListener
  	</listener-class>
  </listener>
  <context-param>
	<param-name>contextConfigLocation</param-name>
	<param-value>
		classpath:/META-INF/applicationContext.xml
		classpath:/META-INF/security-context.xml
	</param-value>
  </context-param>


【9.4:認証処理の適用】

【9.4.2:フォーム認証】

・(2018.10.08)フォーム認証(JavaConfig)

	<groupId>example</groupId>
	<artifactId>form-login</artifactId>

　ベース： 4.2:firstapp、9.2:spring-security-config

　(コメント)

	<button>要素では、フォームがサブミットされない
	　
	<c:url var="loginUrl" value="/login"/>
	<form:form action="${loginUrl}">
		<table>
			<tr>
				<td><label for="username">ユーザー名</label></td>
				<td><input type="text" id="username" name="username"/></td>
			</tr>
			<tr>
				<td><label for="password">パスワード</label></td>
				<td><input type="password" id="password" name="password"/></td>
			</tr>
			<tr>
				<td>&nbsp;</td>
<!-- 2018.10.08 change: <button> element not submit form				
				<td><button>ログイン</button></td>
-->
				<td><input type="submit" value="ログイン"/></td>
			</tr>
		</table>
	</form:form>

・(2018.10.21)フォーム認証(XMLConfig)

	<groupId>example</groupId>
	<artifactId>form-login-xml</artifactId>

　ベース： 4.2:firstapp-xml、9.2:spring-security-config-xml


【9.4.4:認証失敗時のレスポンス】

・(2018.10.21)認証失敗時のレスポンス(JavaConfig)

	<groupId>example</groupId>
	<artifactId>failure-url</artifactId>

　ベース：9.4.2:from-login


・(2018.10.27)認証失敗時のレスポンス(XML Config)

	<groupId>example</groupId>
	<artifactId>failure-url-xml</artifactId>

　ベース：9.4.2:from-login-xml, 9.4.4:failure-url

【9.4.5:データベース認証】

・(2018.10.28)データベース認証(JavaConfig)

	<groupId>example</groupId>
	<artifactId>dao-authentication-provider</artifactId>

　ベース：9.4.2:from-login、3.2.3:rowmapper、3.3.2:transactional

　コメント：
　
	・BCryptPasswordEncoderの代わりに、NoOpPasswordEncoderを使用
	
	・WebSecurityConfigクラスのconfigureAuthenticationManagerメソッドは、
	configureメソッドの間違いではないかと思われる

		see https://docs.spring.io/spring-security/site/docs/4.2.5.RELEASE/apidocs/org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html 

		@Autowired
		void configureAuthenticationManager(AuthenticationManagerBuilder auth) 
				throws Exception {
			auth.userDetailsService(userDetailsService)
				.passwordEncoder(passwordEncoder());
		}
			↓
		@Override
		protected void configure(AuthenticationManagerBuilder auth) 
				throws Exception {
			auth.userDetailsService(userDetailsService)
				.passwordEncoder(passwordEncoder());
		}

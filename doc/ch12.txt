【12.1:Thymeleafとは】
【12.2:Spring+Thymeleafのセットアップ】

(コメント)
	thymeleaf-spring5 では、ServletContextTemplateResolverのコンストラクタ引数に
	ServletContextが必要

	ThymeleafConfigクラスを以下のように修正
	
	@Configuration
	public class ThymeleafConfig {

		@Autowired
		ServletContext context;
	
		@Bean
		public ServletContextTemplateResolver templateResolver() {
			ServletContextTemplateResolver resolver =
					new ServletContextTemplateResolver(context); 
						// 2019.02.11: need ServletContext param for thymeleaf-spring5
			resolver.setPrefix("/WEB-INF/templates/");
			resolver.setSuffix(".html");
			resolver.setTemplateMode("HTML5");
			resolver.setCharacterEncoding("UTF-8");
			return resolver;
		}
		・・・
	}
		
【12.3:Thymeleafを利用したViewの実装】

【12.3.1:初めてのThymeleaf】

・(2019.02.11、2019.05.18)初めてのThyeleaf（Java-config）

	<groupId>example</groupId>
	<artifactId>firstapp</artifactId>

　(ベース)　ch04:firstapp

　(コメント)　2019.05.18

	echo/outpu.htmlにおいて、spanタグはth:objectによってコンテキストが指定されていない
	ので、選択変数式*{echoForm.text}ではなく、変数式${echoForm.text}と書かれるべき
	
	<!-- 2019.05.18 change
		「<span th:text="*{echoForm.text}">ここに入力した値が表示される</span>」
	-->
		「<span th:text="${echoForm.text}">ここに入力した値が表示される</span>」

【12.3.2:テキストの出力】

・(2019.02.11)初めてのThyeleaf（Java-config）

	<groupId>example</groupId>
	<artifactId>th-utext</artifactId>

　(ベース)　12.3.1:firstapp

【12.3.4:th属性による属性値の設定】

・(2019.05.19、2019.05.22)存在有無が重要な属性の出力を制御する方法

	<groupId>example</groupId>
	<artifactId>th-checked</artifactId>

　(ベース)　12.3.1:firstapp

・(2019.05.22)複数の属性に同じ値を設定する方法

	<groupId>example</groupId>
	<artifactId>th-alt-title</artifactId>

　(ベース)　12.3.4:th-checked
　
　(コメント：静的リソースを参照する方法

　	(参照)　https://qiita.com/kazuki43zoo/items/e12a72d4ac4de418ee37

	以下の手順で設定する
	
	①WebMvcConfigクラスで静的リソースのマッピングを定義する

		// see https://qiita.com/kazuki43zoo/items/e12a72d4ac4de418ee37
	    @Override
	    public void addResourceHandlers(ResourceHandlerRegistry registry) {
	        registry.addResourceHandler("/images/**")
	                .addResourceLocations("classpath:/images/");
	    }

	②src/main/resourcesは以下のimagesフォルダ以下にイメージファイルを配置する
	
　(コメント：メッセージ式#{..}の利用）
　
　	Thymeleafのメッセージ式#{..}から、Spring管理のメッセージを利用することができる
　	2.7.3:ネイティブコードのメッセージ定義を参照
　	